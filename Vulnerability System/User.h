#pragma once

#include "pch.h"

//class UserBase
//{
//public:
//	std::string _uid;
//	std::string _password;
//	std::string _user_name;
//	short _authority;
//
//	virtual ~UserBase() = 0;
//
//	virtual std::string getUID() const = 0;
//	virtual std::string getPassWord() const = 0;
//	virtual std::string getUserName() const = 0;
//	virtual short getAuthority() const = 0;
//
//	virtual void setUID(std::string&& uid) = 0;
//	virtual void setPassWord(std::string&& password) = 0;
//	virtual void setUserName(std::string&& user_name) = 0;
//	virtual void setAuthority(short&& authority) = 0;
//};
//
//class User : public UserBase
//{
//public:
//	User(std::string&& uid, std::string&& password, std::string&& user_name, short&& authority);
//	~User() override;
//
//	std::string getUID() const override;
//	std::string getPassWord() const override;
//	std::string getUserName() const override;
//	short getAuthority() const override;
//
//	void setUID(std::string&& uid) override;
//	void setPassWord(std::string&& password) override;
//	void setUserName(std::string&& user_name) override;
//	void setAuthority(short&& authority) override;
//};


class User
{
public:
	User(std::string&& uid = std::string(),
		std::string&& password = std::string(),
		std::string&& user_name = std::string(),
		short&& authority = 0
	);
	~User();

	std::string getUID() const;
	std::string getPassWord() const;
	std::string getUserName() const;
	short getAuthority() const;

	//void setUID(std::string&& uid);   /* 个人觉得uid不允许修改 */
	void setPassWord(std::string&& password);
	void setUserName(std::string&& user_name);
	void setAuthority(short&& authority);

private:
	std::string _uid;
	std::string _password;
	std::string _user_name;
	short _authority;
};
